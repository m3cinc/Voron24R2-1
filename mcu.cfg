######################################################### \
#### User MCU and TMCs wiring definition file ###########  + --> Everything MCU related :)
######################################################### /

# This file is yours: keep in mind that it will not be erased when updating
# the config using moonraker and it will be kept as you've set it.

# Put here all your wiring definitions, your MCU serial port, CANbus UUID, etc...
# It should be populated automatically with some default wiring templates during
# the first time install of the config if you choose to do so when asked by the
# script. If it's not the case, you will need to manually define all your
# [board_pins] section. You can use the pinout documentation here: ./docs/pinout.md

# ------------------------------------------------------------------------------------------


#-------------------------#
#   TMCs DRIVERS          #
#-------------------------#

# ---------------------------------------------------------------------- AXIS DRIVERS ----> optional, but only one line per axis need to be selected
### 1. X Drivers -------------------------------------------------------------------------
# [include config/hardware/axis/X/TMC/TMC2209.cfg]
# [include config/hardware/axis/X/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/X/TMC/TMC2240.cfg]
[include config/hardware/axis/X/TMC/TMC5160.cfg]
### 2. Y Drivers -------------------------------------------------------------------------
# [include config/hardware/axis/Y/TMC/TMC2209.cfg]
# [include config/hardware/axis/Y/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/Y/TMC/TMC2240.cfg]
[include config/hardware/axis/Y/TMC/TMC5160.cfg]
### 3. Z Drivers -------------------------------------------------------------------------
# [include config/hardware/axis/Z/TMC/TMC2209_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2209_3-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2209_4-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_3-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_4-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC5160_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC5160_3-Motors.cfg]
[include config/hardware/axis/Z/TMC/TMC5160_4-Motors.cfg]
# ----------------------------------------------------------------------------------------


# ------------------------------------------------------------------- EXTRUDER DRIVER ----> optional, but only one line need to be selected
### --------------------------------------------------------------------------------------
[include config/hardware/extruder/TMC/TMC2209.cfg]
# [include config/hardware/extruder/TMC/TMC2240.cfg]
# ----------------------------------------------------------------------------------------

#---------------------------------------------#
#### Fysetc Spider v3.x MCU definition ########
#---------------------------------------------#

[mcu]
##--------------------------------------------------------------------
# This board work by using a serial connection by default. If you
# want to use CAN, invert the commented lines and use canbus_uuid.

#serial: /dev/serial/by-id/change-me-to-the-correct-mcu-path
canbus_uuid: d36a5b735b5f
canbus_interface: can0
##--------------------------------------------------------------------

[include config/mcu_definitions/main/Fysetc_Spider_v3.x.cfg] # Do not remove this line
[board_pins spider_mcu]
mcu: mcu
aliases:
    X_STEP=MCU_X_MOT_STEP    , X_DIR=MCU_X_MOT_DIR    , X_ENABLE=MCU_X_MOT_ENABLE    , X_TMCUART=MCU_X_MOT_CS_PDN    ,
    Y_STEP=MCU_Y_MOT_STEP    , Y_DIR=MCU_Y_MOT_DIR    , Y_ENABLE=MCU_Y_MOT_ENABLE    , Y_TMCUART=MCU_Y_MOT_CS_PDN    ,

    Z_STEP=MCU_Z_MOT_STEP    , Z_DIR=MCU_Z_MOT_DIR    , Z_ENABLE=MCU_Z_MOT_ENABLE    , Z_TMCUART=MCU_Z_MOT_CS_PDN    ,
    Z1_STEP=MCU_E1_MOT_STEP  , Z1_DIR=MCU_E1_MOT_DIR  , Z1_ENABLE=MCU_E1_MOT_ENABLE  , Z1_TMCUART=MCU_E1_MOT_CS_PDN  ,
    Z2_STEP=MCU_E2_MOT_STEP  , Z2_DIR=MCU_E2_MOT_DIR  , Z2_ENABLE=MCU_E2_MOT_ENABLE  , Z2_TMCUART=MCU_E2_MOT_CS_PDN  ,
    Z3_STEP=MCU_E3_MOT_STEP  , Z3_DIR=MCU_E3_MOT_DIR  , Z3_ENABLE=MCU_E3_MOT_ENABLE  , Z3_TMCUART=MCU_E3_MOT_CS_PDN  ,

    E_STEP=MCU_E0_MOT_STEP   , E_DIR=MCU_E0_MOT_DIR   , E_ENABLE=MCU_E0_MOT_ENABLE   , E_TMCUART=MCU_E0_MOT_CS_PDN   ,

    DRIVER_SPI_MOSI=MCU_SPI4_MOSI , # Used in case of SPI drivers such as TMC2240 or TMC5160
    DRIVER_SPI_MISO=MCU_SPI4_MISO , # Used in case of SPI drivers such as TMC2240 or TMC5160
    DRIVER_SPI_SCK=MCU_SPI4_SCK   , # Used in case of SPI drivers such as TMC2240 or TMC5160

    X_STOP=MCU_X_MIN , Y_STOP=MCU_Y_MIN , Z_STOP=MCU_Z_MIN ,
    EREC_CUTTER_SERVO=MCU_Z_MAX   ,  # ipo PROBE_SENSOR
    ENCODER_SENSOR=MCU_X_MAX , 
    RUNOUT_SENSOR=MCU_Y_MAX     , 

    E_HEATER=MCU_HEAT0     , E_TEMPERATURE=MCU_T0   ,
    BED_HEATER=MCU_BED_OUT , BED_TEMPERATURE=MCU_TB ,

	E_FAN=MCU_FAN0 				  , # Empty
     
    BED_FAN=MCU_FAN1 		  ,
    CONTROLLER_FAN=MCU_FAN2       ,
    EXHAUST_FAN=MCU_HEAT2         ,
    FILTER_FAN=MCU_FAN4           ,
    SPIDER_FAN=MCU_FAN3  		  ,
    NEVERMORE_FAN=MCU_FAN5		  ,

    CHAMBER_TEMPERATURE=MCU_T4 , 

    LIGHT_NEOPIXEL=MCU_G_DATA_5V ,
    BEEPER_PIN=EXP1_10 ,


#--------------------------------------------#
#### BTT SB2209 v1.0 MCU definition ########
#--------------------------------------------#

[mcu toolhead]
##--------------------------------------------------------------------
#canbus_uuid: 71d338900ecd
canbus_uuid: a6229f4a5405
##--------------------------------------------------------------------

# If you want to override the wiring of the BTT SB, keep in mind that this
# board is defined using the "toolhead" name. So you should use "pin: toolhead:PIN_NAME"
# in your own overrides.cfg files.

[include config/mcu_definitions/toolhead/BTT_SB2209_v1.0.cfg] # Do not remove this line
[board_pins sb2209_mcu]
mcu: toolhead
aliases:
    E_STEP=MCU_MOTORDRIVE_STEP , E_DIR=MCU_MOTORDRIVE_DIR , E_ENABLE=MCU_MOTORDRIVE_ENABLE , E_TMCUART=MCU_MOTORDRIVE_UART ,
    E_DIAG=MCU_MOTORDRIVE_DIAG ,

    EXTRUDER_SENSOR=MCU_STOP1 , PROBE_INPUT=MCU_STOP2 ,
    
    TOOLHEAD_SENSOR=MCU_PS ,
    TOOLHEAD_SERVOS=MCU_SERVOS ,

    E_HEATER=MCU_HE0 , E_TEMPERATURE=MCU_TH0 , CHAMBER_TEMPERATURE=MCU_NTC ,

    TOOLHEAD_FAN=MCU_FAN1_PWM ,
    PART_FAN=MCU_FAN2_PWM , 
    E_FAN=MCU_4WFAN_PWM ,
    E_FAN_TACH=MCU_4WFAN_TACH ,
    STATUS_NEOPIXEL=MCU_RGB ,

    ADXL_CS=MCU_SPI2_NSS , ADXL_SCLK=MCU_SPI2_CLK , ADXL_MISO=MCU_SPI2_MISO , ADXL_MOSI=MCU_SPI2_MOSI ,
    MAX31865_NSS=MCU_SPI1_NSS , MAX31865_CLK=MCU_SPI1_CLK , MAX31865_MOSI=MCU_SPI1_MOSI , MAX31865_MISO = MCU_SPI1_MISO , 


#----------------------------------------#
#    BTT SB2209 v1.0 pins remapping      #
#----------------------------------------#

# These pins overrides are automatically added when you select a CANbus
# toolhead MCU during the installation process. They should provide a
# good base to work with. Feel free to adapt to your board if needed!

[fan]
pin: toolhead:PART_FAN

[heater_fan hotend_fan][
pin: toolhead:E_FAN

## Uncomment the following line if not using sensorless homing
## and having the X endstop plugged to the toolhead MCU
# [stepper_x]
# endstop_pin: ^toolhead:X_STOP

[neopixel status_leds]
pin: toolhead:STATUS_NEOPIXEL

[tmc2209 extruder]
uart_pin: toolhead:E_TMCUART

#-----------------------------------------------#
#### BTT MMB CAN board MCU definition ###########
#-----------------------------------------------#

[mcu mmu]
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/change-me-to-the-correct-mcu-path
canbus_uuid: 8618914982f9
##--------------------------------------------------------------------

# If you want to override the wiring of the BTT MMB CAN board, keep in mind that this
# board is defined using the "mmu" name. So you should use "pin: mmu:PIN_NAME"
# in your own overrides.cfg files.

[include config/mcu_definitions/mmu/BTT_MMB_CAN_v1.0.cfg] # Do not remove this line
[board_pins mmu_mcu]
mcu: mmu
aliases:
    MMU_GEAR_STEP=MCU_M1_STEP  , MMU_GEAR_DIR=MCU_M1_DIR  , MMU_GEAR_ENABLE=MCU_M1_EN  , MMU_GEAR_UART=MCU_M1_UART  ,
    MMU_SEL_STEP=MCU_M2_STEP   , MMU_SEL_DIR=MCU_M2_DIR   , MMU_SEL_ENABLE=MCU_M2_EN   , MMU_SEL_UART=MCU_M2_UART   ,
    
    MMU_GEAR_DIAG=MCU_STP1 , # Shared with MCU_STP1
    MMU_SEL_DIAG=MCU_STP2  , # Shared with MCU_STP2

    MMU_SEL_ENDSTOP=MCU_STP11  ,

    MMU_SERVO=MCU_MOT          ,
    MMU_ENCODER=MCU_SENSOR     ,
    MMU_NEOPIXEL=MCU_RGB       ,
    # MMU_GATE_SENSOR=MCU_STP1  , # (if not GEAR DIAG!)

    MMU_PRE_GATE_0=MCU_STP3    ,
    MMU_PRE_GATE_1=MCU_STP4    ,
    MMU_PRE_GATE_2=MCU_STP5    ,
    MMU_PRE_GATE_3=MCU_STP6    ,
    MMU_PRE_GATE_4=MCU_STP7    ,
    MMU_PRE_GATE_5=MCU_STP8    ,
    MMU_PRE_GATE_6=MCU_STP9    ,
    MMU_PRE_GATE_7=MCU_STP10   ,
    # MMU_PRE_GATE_8=""          ,
    # MMU_PRE_GATE_9=""          ,
    # MMU_PRE_GATE_10=""         ,
    # MMU_PRE_GATE_11=""         ,

    SPI_SCLK=MCU_SCK , SPI_MOSI=MCU_MOSI , SPI_MISO=MCU_MISO ,

    ## I2C header
    I2C_SDA=MCU_I2C_SDA  , I2C_SCL=MCU_I2C_SCL  , I2C_GND=<GND>  , I2C_5V=<5V>  ,

    ## SWD header
    SWD_Reset=<RST> , SWD_PA14=MCU_SWD_PA14 , SWD_GND=<GND> , SWD_PA13=MCU_SWD_PA13 , SWD_3.3V=<3.3V> ,

[mcu rpi]
serial: /tmp/klipper_host_mcu

[mcu nano]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command
